# MySQL connection (Prisma)
# Local dev (host machine):
DATABASE_URL="mysql://panel:panel@localhost:3306/panel"
# Docker (container) override in docker-compose:
# DATABASE_URL="mysql://panel:panel@mysql:3306/panel"

# JWT
JWT_SECRET="change_this_in_production"
JWT_EXPIRES_IN="7d"

# Frontend URL for CORS and OAuth redirect after token issuance
# Use your public host (the one your proxy serves)
FRONTEND_URL="https://velvacloud.com"

# OAuth (Google)
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""
# Callback must match the URL registered in the Google Console
GOOGLE_CALLBACK_URL="https://velvacloud.com/api/auth/google/callback"

# OAuth (Discord)
DISCORD_CLIENT_ID=""
DISCORD_CLIENT_SECRET=""
# Callback must match the URL registered in the Discord Developer Portal
DISCORD_CALLBACK_URL="https://velvacloud.com/api/auth/discord/callback"

# Stripe (set your live or test keys accordingly)
STRIPE_SECRET_KEY=""
STRIPE_WEBHOOK_SECRET=""
# Success/cancel URLs can be provided by the client, but you can set defaults:
STRIPE_SUCCESS_URL="https://panel.velvacloud.com/billing?success=1"
STRIPE_CANCEL_URL="https://panel.velvacloud.com/billing?canceled=1"

# PayPal (Subscriptions)
PAYPAL_CLIENT_ID=""
PAYPAL_CLIENT_SECRET=""
# sandbox or live
PAYPAL_ENV="sandbox"

# Agent auto-registration (no node subdomain required)
# Set a strong random secret - agents must present it to register
NODE_REGISTRATION_SECRET=""

# Panel CA for signing node certificates (PKI service)
# Provide absolute file paths (recommended) or leave empty to auto-generate dev CA
CA_KEY_PATH=""
CA_CERT_PATH=""

# Daemon (panel -> agent mTLS)
# Provide PEM contents or absolute file paths
# If using per-node apiUrl (recommended), DAEMON_URL can be left unset.
DAEMON_URL=""
DAEMON_CA=""
DAEMON_CLIENT_CERT=""
DAEMON_CLIENT_KEY=""